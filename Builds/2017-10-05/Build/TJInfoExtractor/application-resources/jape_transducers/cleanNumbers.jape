/*
   File:        cleanNumbers.jape
   Author:      Kyle Miller
   Created:     July, 2014
   Description: a GATE JAPE file that attempts to annotate information in text

   Copyright (C) 2014, Carnegie Mellon University
*/
/* 
 * This file is free software,
 * licenced under the GNU Lesser General Public License, Version 3, June 2007
 * (in the distribution as file licence.html)  
 * 
 */

Imports: {
  import java.math.BigInteger;  
}

Phase:numbercleanzeros
Input: Token Integer SpaceToken Lookup
Options: control = appelt

Rule: IntegerClean
(({ Integer.type == numbers } ({ Integer.type == words, Integer@length==1, !Lookup })+)+):num
-->
{
   AnnotationSet numSet = ((AnnotationSet)bindings.get("num")).get("Integer");
   long start = numSet.firstNode().getOffset();
   long end = numSet.lastNode().getOffset();

   Iterator<Annotation> Iter = numSet.inDocumentOrder().iterator();
   BigInteger value = BigInteger.valueOf(0);
   while(Iter.hasNext()){
     Annotation Num = Iter.next();
     Integer digits = Num.getFeatures().get("value").toString().length();
     value = value.multiply( BigInteger.valueOf((long)Math.round(Math.pow(10, digits))) );
     value = value.add( (BigInteger) Num.getFeatures().get("value") );
   }   
   
   FeatureMap features = Factory.newFeatureMap(); 
   features.put("value", value );
   features.put("rule", "IntegerClean");
   features.put("type", "wordsAndNumbers");

   inputAS.removeAll(numSet);

   try {  
      outputAS.add(start,end, "Integer", features);
   } catch(InvalidOffsetException ioe){
      throw new LuckyException(ioe);
   }
}



